@using System.Globalization;
@model Demosite.ViewModels.NewsPageViewModel
@using Microsoft.AspNetCore.Html

@{
    Func<dynamic, IHtmlContent> ShowMonthList(IEnumerable<int> months) =>
    @<select id="month">
        <option value="0">Все</option>
        @foreach (int month in months)
        {
        <option value="@month">@CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(month)</option>
        }
    </select>;
}

<main class="main">
    @await Component.WidgetZone(Html, "ContentAbove")
    <div class="page page-news" data-news-page>
        <div class="wrapper">
            @await Html.PartialAsync("../_BreadCrumbs.cshtml", Model.BreadCrumbs)
            <section class="page__section">
                <h1 class="page__main-title">@Model.Header</h1>
                <div class="page-news__filters">
                    <div class="page-news__filters-item">
                        <div class="select">
                            <div class="select__group">
                                <label class="select__label" for="year">Выберите год</label>
                                <div class="select__box">
                                    <select id="year">
                                        <option value="0">Все</option>
                                        @foreach (int year in Model.Items.Select(item => item.Date.Year).Distinct())
                                        {
                                            <option value="@year">@year</option>
                                        }
                                    </select>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="page-news__filters-item">
                        <div class="select">
                            <div class="select__group">
                                <label class="select__label" for="month">Выберите месяц</label>
                                <div class="select__box">
                                    @ShowMonthList(Model.Items.Select(item => item.Date.Month).Distinct())(null)
                                   @* <select id="month">
                                          <option value="0">Все</option>
                                        @foreach (int month in Model.Items.Select(item => item.Date.Month).Distinct())
                                        {
                                        <option value="@month">@CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(month)</option>
                                        }
                                    </select>*@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <section data-news-section="">
                    <div class="page-news__list">
                        <div class="news-list" data-news-list="">
                            @foreach (var item in Model.Items)
                            {
                                <onscreen-article id="@item.Id" content-id="30757" title="@item.Title" published="@item.Published">
                                    <div class="news-list__item">
                                        <div class="card">
                                            <div class="card__date">@item.Date.ToString("dd MMMM yyyy")</div>
                                            <div class="card__title"><a href="@item.Url">@item.Title</a></div>
                                            <div class="card__descr">@item.Brief</div><a class="read-more card__read-more" href="@item.Url">Читать...</a>
                                        </div>
                                    </div>
                                </onscreen-article>
                            }
                        </div>
                    </div>
                    @if (Model.PageCount > 1)
                    {
                        <div class="pagination" data-current-page="@Model.CurrentPage">
                            @if (Model.CurrentPage > 1)
                            {
                                <div class="pagination__arrow pagination__arrow--prev"></div>
                            }
                            <ul class="pagination__list">
                                @if (Model.PageCount <= 7)
                                {
                                    @for (int i = 1; i <= Model.PageCount; i++)
                                    {
                                        <li class="pagination__list-item @(i == Model.CurrentPage ? "pagination__list-item--current" : "")" data-page-id="@i"><a href="">@i</a></li>
                                    }
                                }
                                else if (Model.CurrentPage < 5)
                                {
                                    @for (int i = 1; i <= 5; i++)
                                    {
                                        <li class="pagination__list-item @(i == Model.CurrentPage ? "pagination__list-item--current" : "")" data-page-id="@i"><a href="">@i</a></li>
                                    }
                                    <li class="pagination__list-item pagination__list-item--separator">...</li>
                                    <li class="pagination__list-item " data-page-id="@Model.PageCount"><a href="">@Model.PageCount</a></li>
                                }
                                else if (Model.CurrentPage >= Model.PageCount - 3)
                                {
                                    <li class="pagination__list-item " data-page-id="1"><a href="">1</a></li>
                                    <li class="pagination__list-item pagination__list-item--separator">...</li>
                                    @for (int i = Model.PageCount - 4; i <= Model.PageCount; i++)
                                    {
                                        <li class="pagination__list-item @(i == Model.CurrentPage ? "pagination__list-item--current" : "")" data-page-id="@i"><a href="">@i</a></li>
                                    }
                                }
                                else
                                {
                                    <li class="pagination__list-item " data-page-id="1"><a href="">1</a></li>
                                    <li class="pagination__list-item pagination__list-item--separator">...</li>
                                    @for (int i = Model.CurrentPage - 1; i <= Model.CurrentPage + 1; i++)
                                    {
                                        <li class="pagination__list-item @(i == Model.CurrentPage ? "pagination__list-item--current" : "")" data-page-id="@i"><a href="">@i</a></li>
                                    }
                                    <li class="pagination__list-item pagination__list-item--separator">...</li>
                                    <li class="pagination__list-item " data-page-id="@Model.PageCount"><a href="">@Model.PageCount</a></li>
                                }
                            </ul>
                            @if (Model.CurrentPage < Model.PageCount)
                            {
                                <div class="pagination__arrow pagination__arrow--next"></div>
                            }
                        </div>
                    }

                </section>


            </section>
        </div>
    </div>
    @await Component.WidgetZone(Html, "ContentBelow")
</main>
